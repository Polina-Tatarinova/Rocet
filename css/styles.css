@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  height: 100%;
  /**
   Убираем скачок интерфейса по горизонтали
   при появлении / исчезновении скроллбара
  */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
   Пригодится в большинстве ситуаций
   (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  min-height: 100%;
  /**
   Унифицированный интерлиньяж
  */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "TT Firs Neue";
  src: url("/fonts/TTFirsNeue-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter-Regular";
  src: url("/fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
}

.header {
  width: 1920px;
  background: #fff;
  padding-top: 72px;
}

.container {
  width: 1456px;
  margin-left: 236px;
  margin-right: 236px;
  border: 1px solid green;
}
.container .header_wrapper {
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap;
}
.container .header_wrapper .header_logo {
  width: 526px;
  height: 48px;
  display: flex;
  justify-content: space-around;
  gap: 57px;
  border: 1px solid red;
}
.container .header_wrapper .header_logo img:first-child {
  width: 239px;
  height: 48px;
}
.container .header_wrapper .header_logo img:last-child {
  width: 229px;
  height: 29px;
  margin-top: 9px;
  margin-bottom: 9px;
}
.container .header_wrapper .header_nav {
  width: 240px;
  height: 48px;
  border: 1px solid yellow;
}
.container .header_wrapper .header_nav ol {
  list-style: none;
  display: flex;
  gap: 16px;
  align-items: center;
  padding: 0px;
  margin: 0px;
}
.container .header_wrapper .header_nav .interactiv_icons {
  transition: fill 0.5 ease 0.2;
}
.container .header_wrapper .header_nav .interactiv_icons .circle {
  border-radius: 100%;
  fill: #f6f6f6;
}
.container .header_wrapper .header_nav .interactiv_icons .circle_icons {
  fill: #f96d6b;
}
.container .header_wrapper .header_nav .interactiv_icons:active .circle {
  fill: #f96d6b;
}
.container .header_wrapper .header_nav .interactiv_icons:hover .circle {
  fill: #f96d6b;
}
.container .header_wrapper .header_nav .interactiv_icons:hover .circle_icons {
  fill: #f6f6f6;
}
.container .header_wrapper .header_nav .interactiv_icons:active .circle_icons {
  fill: #f6f6f6;
}

/*# sourceMappingURL=styles.css.map */